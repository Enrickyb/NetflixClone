{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/enric/Documents/Projetos/reactjs/Netflix-React/NetflixClone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/enric/Documents/Projetos/reactjs/Netflix-React/NetflixClone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\enric\\\\Documents\\\\Projetos\\\\reactjs\\\\Netflix-React\\\\NetflixClone\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useState}from'react';import'./App.css';import FeaturedMovie from'./components/FeaturedMovie/FeaturedMovie';import Header from'./components/Header/Header';import MovieRow from'./components/MovieRow/MovieRow';import tmdb from'./Tmdb';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieList=_useState2[0],setMovieList=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),featuredData=_useState4[0],setFeaturedData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),blackHeader=_useState6[0],setBlackHeader=_useState6[1];useEffect(function(){var loadAll=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var list,originals,randomChosen,chosen,chosenInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tmdb.getHomeList();case 2:list=_context.sent;setMovieList(list);//pegando featured\noriginals=list.filter(function(i){return i.slug==='originals';});randomChosen=Math.floor(Math.random()*(originals[0].items.results.length-1));chosen=originals[0].items.results[randomChosen];_context.next=9;return tmdb.getMovieInfo(chosen.id,'tv');case 9:chosenInfo=_context.sent;setFeaturedData(chosenInfo);case 11:case\"end\":return _context.stop();}}},_callee);}));return function loadAll(){return _ref.apply(this,arguments);};}();loadAll();},[]);useEffect(function(){var scrollListener=function scrollListener(){if(window.scrollY>10){setBlackHeader(true);}else{setBlackHeader(false);}};window.addEventListener('scroll',scrollListener);return function(){window.removeEventListener('scroll',scrollListener);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{black:blackHeader}),featuredData&&/*#__PURE__*/_jsx(FeaturedMovie,{item:featuredData}),/*#__PURE__*/_jsx(\"section\",{className:\"lists\",children:movieList.map(function(item,key){return/*#__PURE__*/_jsx(MovieRow,{title:item.title,items:item.items},key);})}),/*#__PURE__*/_jsxs(\"footer\",{children:[\"Made by Enrickyb \",/*#__PURE__*/_jsx(\"br\",{}),\"Data base by Themoviedb.org\"]}),movieList.length<=0&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"img\",{src:\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\",alt:\"loading\"})})]});}export default App;","map":{"version":3,"sources":["C:/Users/enric/Documents/Projetos/reactjs/Netflix-React/NetflixClone/src/App.js"],"names":["useEffect","useState","FeaturedMovie","Header","MovieRow","tmdb","App","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","loadAll","getHomeList","list","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","getMovieInfo","id","chosenInfo","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":"6dAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,0CAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAAiCL,QAAQ,CAAC,EAAD,CAAzC,wCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAAuCP,QAAQ,CAAC,IAAD,CAA/C,yCAAOQ,YAAP,eAAqBC,eAArB,eACA,eAAqCT,QAAQ,CAAC,KAAD,CAA7C,yCAAOU,WAAP,eAAoBC,cAApB,eAGAZ,SAAS,CAAC,UAAI,CACZ,GAAMa,CAAAA,OAAO,0FAAG,2MAGGR,CAAAA,IAAI,CAACS,WAAL,EAHH,QAGVC,IAHU,eAIdP,YAAY,CAACO,IAAD,CAAZ,CAEA;AACIC,SAPU,CAOED,IAAI,CAACE,MAAL,CAAY,SAAAC,CAAC,QAAEA,CAAAA,CAAC,CAACC,IAAF,GAAW,WAAb,EAAb,CAPF,CAQVC,YARU,CAQKC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,CAAoC,CAArD,CAAX,CARL,CASVC,MATU,CASDX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CATC,uBAUSf,CAAAA,IAAI,CAACuB,YAAL,CAAkBD,MAAM,CAACE,EAAzB,CAA6B,IAA7B,CAVT,QAUVC,UAVU,eAWdpB,eAAe,CAACoB,UAAD,CAAf,CAXc,uDAAH,kBAAPjB,CAAAA,OAAO,0CAAb,CAcAA,OAAO,GACR,CAhBQ,CAgBP,EAhBO,CAAT,CAiBAb,SAAS,CAAC,UAAI,CACZ,GAAM+B,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAK,CAC1B,GAAGC,MAAM,CAACC,OAAP,CAAiB,EAApB,CAAwB,CACtBrB,cAAc,CAAC,IAAD,CAAd,CACD,CAFD,IAEK,CACHA,cAAc,CAAC,KAAD,CAAd,CACD,CACF,CAND,CAOAoB,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,cAAlC,EACA,MAAO,WAAI,CACTC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAqCJ,cAArC,EACD,CAFD,CAGD,CAZQ,CAYP,EAZO,CAAT,CAeA,mBAEE,aAAK,SAAS,CAAC,MAAf,wBAEE,KAAC,MAAD,EAAQ,KAAK,CAAEpB,WAAf,EAFF,CAIEF,YAAY,eAAI,KAAC,aAAD,EAAe,IAAI,CAAEA,YAArB,EAJlB,cAOE,gBAAS,SAAS,CAAC,OAAnB,UACGF,SAAS,CAAC6B,GAAV,CAAc,SAACC,IAAD,CAAOC,GAAP,qBACT,KAAC,QAAD,EAAoB,KAAK,CAAED,IAAI,CAACE,KAAhC,CAAuC,KAAK,CAAEF,IAAI,CAACb,KAAnD,EAAec,GAAf,CADS,EAAd,CADH,EAPF,cAaE,2DACmB,aADnB,iCAbF,CAiBI/B,SAAS,CAACmB,MAAV,EAAoB,CAApB,eACD,YAAK,SAAS,CAAC,SAAf,uBACA,YAAK,GAAG,CAAC,sEAAT,CAAgF,GAAG,CAAC,SAApF,EADA,EAlBH,GAFF,CA4BD,CAED,cAAepB,CAAAA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie/FeaturedMovie';\nimport Header from './components/Header/Header';\nimport MovieRow from './components/MovieRow/MovieRow';\nimport tmdb from './Tmdb'\n\nfunction App() {\n\n  const [movieList, setMovieList]= useState([])\n  const [featuredData, setFeaturedData]= useState(null)\n  const [blackHeader, setBlackHeader]= useState(false)\n\n\n  useEffect(()=>{\n    const loadAll = async () =>{\n     \n      //pegando a lista total\n      let list = await tmdb.getHomeList()\n      setMovieList(list)\n\n      //pegando featured\n      let originals = list.filter(i=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeaturedData(chosenInfo)\n    }\n\n    loadAll()\n  },[])\n  useEffect(()=>{\n    const scrollListener = () =>{\n      if(window.scrollY > 10) {\n        setBlackHeader(true)\n      }else{\n        setBlackHeader(false)\n      }\n    }\n    window.addEventListener('scroll', scrollListener)\n    return ()=>{\n      window.removeEventListener('scroll', scrollListener)\n    }\n  },[])\n\n\n  return (\n    \n    <div className='page'>\n      \n      <Header black={blackHeader}></Header>\n      {\n      featuredData && <FeaturedMovie item={featuredData}/>\n      }\n\n      <section className='lists'>\n        {movieList.map((item, key)=>(\n              <MovieRow key={key} title={item.title} items={item.items}></MovieRow>\n              ))}\n      </section>\n      \n      <footer> \n        Made by Enrickyb <br/>\n         Data base by Themoviedb.org \n       </footer>\n       {movieList.length <= 0 &&\n       <div className='loading'>\n       <img src='https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif' alt='loading'></img>\n     </div>\n     }\n       \n       \n    </div>\n  );\n} \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}